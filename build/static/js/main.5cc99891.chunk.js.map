{"version":3,"sources":["components/Header.js","components/PicCard.js","components/PicList.js","components/Login.js","components/App.js","index.js"],"names":["Header","setLoggedInUser","onClick","PicCard","url","description","date","id","title","userId","userLiked","userName","deleteId","setDeleteId","useState","isLiked","setIsLiked","useEffect","forEach","obj","nasa_id","console","log","handleSetDelete","val","fetch","method","headers","then","className","src","alt","width","height","style","color","body","JSON","stringify","PicList","picData","setSelectedGalaxy","user","setUserLiked","res","json","liked","populateWithCards","map","data","date_created","links","href","username","onSubmit","e","preventDefault","target","galaxy","value","htmlFor","type","name","placeholder","form","Login","submitMethod","nativeEvent","submitter","password","window","alert","length","App","setPicData","selectedGalaxy","loggedInUser","collection","items","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5cc99891.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Header({setLoggedInUser}) {\n\n    function handleLogout(){\n        setLoggedInUser(\"\")\n    }\n\n    return (\n        <div>\n            <button onClick={handleLogout}> Log Out </button>\n        </div>\n    )\n}\n","import React, {useEffect, useState} from 'react'\nimport { FaHandSpock } from \"react-icons/fa\"\n\n\nexport default function PicCard({url, description, date, id, title, userId, userName, userLiked, deleteId, setDeleteId}) {\n\n    const[isLiked, setIsLiked] = useState(false) \n    \n\n    //All user's likes are filtered through, checking if this post is already liked\n   useEffect(() => {\n        userLiked.forEach( obj => {\n\n            if(id === obj.nasa_id){\n                setIsLiked(true)\n            }\n        })\n\n    },[userLiked, setDeleteId])\n\n    \n    \n    console.log(deleteId)\n\n    function handleLike(){\n           fetch(`https://my-json-server.typicode.com/JZims/spacetagram-shopify/liked`, {\n               method: \"POST\", \n               headers: {\n                   \"Content-Type\": \"application/json\"\n               }, \n               body: JSON.stringify({nasa_id: id, userId: userId})\n           })\n           .then( () => setIsLiked(true) )\n    }\n\n    \n\n    const handleUnlike = function (){\n\n        fetch(`https://my-json-server.typicode.com/JZims/spacetagram-shopify/liked/${deleteId}`, {\n            method: \"DELETE\", \n            headers: {\n                \"Content-Type\": \"applicaiton/json\"\n            }\n        })\n        .then( () => setIsLiked(false))\n    }\n\n    function handleSetDelete(){\n        userLiked.forEach( obj => {\n            if(id === obj.nasa_id){\n\n                setDeleteId(val => val = obj.id)\n                handleUnlike()\n            }\n        })\n        \n    }\n    \n\n    return (\n        <div className=\"image_div\">\n            <img src={url} alt={description} width=\"650\" height=\"400\" className=\"galaxy_image\"/>\n            <div className=\"galaxy_info\">\n                <h3>{title}</h3>\n                <h5>Date Taken: {date}</h5>\n                <p>{description}</p>\n                {isLiked ? <button id=\"unlike_button\" onClick={ () => handleSetDelete() }> <FaHandSpock style={{color: 'blue'}} /> Liked </button> : <button id=\"like_button\" onClick={handleLike}> <FaHandSpock /> Like </button> }\n            </div>\n        </div>\n    )\n}\n","import React, {useEffect, useState} from 'react'\nimport PicCard from './PicCard'\n\nexport default function PicList({picData, setSelectedGalaxy, user}) {\n\n    const [userLiked, setUserLiked] = useState([])\n    const [deleteId, setDeleteId] = useState()\n\n\n    // fetch for list of liked posts when the page loads\n    useEffect(()=>{\n        fetch(`https://my-json-server.typicode.com/JZims/spacetagram-shopify/users/${user.id}?_embed=liked`)\n            .then(res => res.json())\n            .then(res => {\n                setUserLiked(res.liked)\n            })\n    },[user.id])\n    \n   \n\n    function handleGalaxyChange(e){\n        e.preventDefault()\n        setSelectedGalaxy(e.target.galaxy.value)\n    }\n\n\n    const populateWithCards = picData.map(obj => {\n                return (\n                    <PicCard\n                        key = {obj.data[0].nasa_id}\n                        id =  {obj.data[0].nasa_id}\n                        title = {obj.data[0].title}\n                        date = {obj.data[0].date_created}\n                        description = {obj.data[0].description} \n                        url = {obj.links[0].href}\n                        userId = {user.id}\n                        userName = {user.username}\n                        userLiked = {userLiked}\n                        deleteId = {deleteId}\n                        setDeleteId = {setDeleteId}\n                    />\n                )\n            })\n\n    \n\n    return (\n        <div>\n            <form onSubmit={handleGalaxyChange} id=\"galaxies\">\n                <label htmlFor=\"galaxy\">Which Galaxy would you like to search for?</label>\n                <br/>\n                <input type=\"text\" id=\"galaxy\" name=\"galaxy\" placeholder=\"Enter a galaxy name:\"/>\n                <br/>\n                <button type=\"submit\" form=\"galaxies\">Submit</button>\n            </form>\n            <br/>\n            <br/>\n            {populateWithCards}\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function Login({setLoggedInUser}) {\n\n  \n\n    function handleLogin(e){\n        e.preventDefault()\n        const submitMethod = e.nativeEvent.submitter.name \n        const username = e.target.username.value\n        const password = e.target.password.value\n\n        if(submitMethod !== \"login\"){\n            fetch(`https://my-json-server.typicode.com/JZims/spacetagram-shopify/users`, {\n                method: \"POST\", \n                headers: {\n                    \"Content-Type\": \"application/json\"\n                }, body: JSON.stringify({username: username, password: password })\n              }\n            )\n            .then(res => res.json())\n            .then(res => {\n                console.log(res)\n                if(res.username !== \"\"){\n                    setLoggedInUser(res)\n                } else {\n                    return window.alert( \"Incorrectly formatted username or password. Please Try again.\"\n                    )\n                \n             } \n            })\n        } else {\n            \n            fetch(`https://my-json-server.typicode.com/JZims/spacetagram-shopify/users?username=${username}`)\n            .then(res => res.json())\n            .then(res => {\n                console.log(res)\n                //insecure login - password checking\n                if(res.length >= 1 && res[0].password === password){\n                    setLoggedInUser(res[0])\n                }  else {\n                    return window.alert( \"Incorrect username or password. Please Try again.\")\n                } \n            })\n        }\n    }\n        \n\n\n\n\n    return (\n        <div id=\"login_page\">\n            <h2>Please Log In</h2>\n            <form id=\"login\" onSubmit={handleLogin}>\n                <input id=\"username\" name=\"username\" placeholder=\"Username\"/>\n                <br/>\n                <input id=\"password\" type=\"password\" name=\"password\" placeholder=\"password\"/>\n                <br/>\n                <button type=\"submit\" form=\"login\" value=\"login\" name=\"login\">Log In</button>\n                <br/>\n                <h4>Or...</h4>\n                <button type=\"submit\" form=\"login\" value=\"new_user\" name=\"new_user\">Sign Up</button>\n            </form>\n        </div>\n    )\n}\n","import { useEffect, useState } from 'react'\nimport Header from './Header'\nimport PicList from './PicList'\nimport Login from './Login'\n\nimport '../App.css';\n\nfunction App() {\n  const [picData, setPicData] = useState([])\n  const [selectedGalaxy, setSelectedGalaxy] = useState(\"\")\n  const [loggedInUser, setLoggedInUser] = useState(\"\")\n\n  \n//Queries API for the requested galaxy and sets the array of items in state\n  useEffect(() => {\n    fetch(`https://images-api.nasa.gov/search?q=${selectedGalaxy}-galaxy-cluster`)\n    .then( res => res.json() )\n    .then( res => {        \n            setPicData([...res.collection.items])        \n        })\n  },[selectedGalaxy])\n\nif(loggedInUser === \"\"){\n  return <Login setLoggedInUser={setLoggedInUser}/>\n}else \n  return (\n    <div className=\"App\">\n      <Header setLoggedInUser={setLoggedInUser}/>\n      <PicList picData={picData} setSelectedGalaxy={setSelectedGalaxy} user={loggedInUser}/>\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n// NASA API Key = ?api_key=O9p5qZ42dAhhkSu46eLiHu3I9YhH31s0AerNKbJh","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>\n    ,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}